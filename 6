#include <iostream>
#include <cmath>

double f(double T, double V, double U, double S) {
    double t1 = S / (V + U);
    double t2 = S / (V - U);
    return T - (t1 + t2);
}

double dichotomy_method(double (*f)(double, double, double, double), double a, double b, double V, double U, double S, double eps) {
    while ((b - a) / 2 > eps) {
        double c = (a + b) / 2;
        if (f(c, V, U, S) == 0) {
            return c;
        } else if (f(a, V, U, S) * f(c, V, U, S) < 0) {
            b = c;
        } else {
            a = c;
        }
    }
    return (a + b) / 2;
}

int main() {
    double V = 10;
    double U = 2;
    double S = 100;

    double a = 0;
    double b = 100;
    double epsilon = 1e-6;

    double T = dichotomy_method(f, a, b, V, U, S, epsilon);
    std::cout << "Total time T: " << T << " seconds" << std::endl;

    return 0;
}





import math

def f(T, V, U, S):
    t1 = S / (V + U)
    t2 = S / (V - U)
    return T - (t1 + t2)

def dichotomy_method(f, a, b, V, U, S, eps):
    while (b - a) / 2 > eps:
        c = (a + b) / 2
        if f(c, V, U, S) == 0:
            return c
        elif f(a, V, U, S) * f(c, V, U, S) < 0:
            b = c
        else:
            a = c
    return (a + b) / 2

V = 10
U = 2
S = 100

a = 0
b = 100
epsilon = 1e-6

T = dichotomy_method(f, a, b, V, U, S, epsilon)
print(f"Total time T: {T} seconds")







